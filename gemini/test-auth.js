#!/usr/bin/env node

import { initializeGemini } from './config.js';

// Script para testar a autentica√ß√£o do Gemini
async function testAuth() {
  console.log('üîç Testando autentica√ß√£o do Google Gemini...\n');
  
  try {
    // Tentar inicializar o Gemini
    console.log('1Ô∏è‚É£ Verificando configura√ß√£o...');
    const { model } = initializeGemini();
    console.log('‚úÖ Configura√ß√£o OK - Gemini inicializado\n');
    
    // Teste simples de conectividade
    console.log('2Ô∏è‚É£ Testando conectividade com Google AI...');
    const prompt = "Responda apenas com: 'Autentica√ß√£o Google funcionando!'";
    
    const result = await model.generateContent(prompt);
    const response = result.response.text();
    
    console.log('‚úÖ Conectividade OK\n');
    console.log('üìã Resposta do Gemini:');
    console.log(`"${response}"\n`);
    
    // Teste de an√°lise de c√≥digo simples
    console.log('3Ô∏è‚É£ Testando an√°lise de c√≥digo...');
    const codeTest = `
const example = () => {
  console.log("Hello World");
};
`;
    
    const codePrompt = `Analise este c√≥digo JavaScript e diga se est√° correto: ${codeTest}`;
    const codeResult = await model.generateContent(codePrompt);
    const codeResponse = codeResult.response.text();
    
    console.log('‚úÖ An√°lise de c√≥digo OK\n');
    console.log('üìã An√°lise:');
    console.log(codeResponse.slice(0, 200) + '...\n');
    
    console.log('üéâ SUCESSO! Gemini CLI est√° funcionando perfeitamente!');
    console.log('\nüöÄ Pr√≥ximos passos:');
    console.log('   npm run gemini:analyze src/app/page.tsx');
    console.log('   node gemini/quick-analyze.js src/components/ui/button.tsx');
    
  } catch (error) {
    console.error('‚ùå Erro na autentica√ß√£o:', error.message);
    
    if (error.message.includes('GEMINI_API_KEY')) {
      console.log('\nüí° Solu√ß√£o:');
      console.log('1. Acesse: https://makersuite.google.com/app/apikey');
      console.log('2. Crie uma API key');
      console.log('3. Substitua no arquivo .env:');
      console.log('   GEMINI_API_KEY=sua_api_key_real');
    } else if (error.message.includes('API_KEY_INVALID')) {
      console.log('\nüí° Solu√ß√£o:');
      console.log('1. Verifique se a API key est√° correta no .env');
      console.log('2. A key deve come√ßar com "AIzaSy..."');
      console.log('3. Verifique se n√£o h√° espa√ßos extras');
    } else if (error.message.includes('QUOTA_EXCEEDED')) {
      console.log('\nüí° Solu√ß√£o:');
      console.log('1. Aguarde 1 minuto (limite: 15 requests/minuto)');
      console.log('2. Ou aguarde at√© meia-noite UTC (limite di√°rio)');
    } else {
      console.log('\nüí° Solu√ß√£o:');
      console.log('1. Verifique sua conex√£o com internet');
      console.log('2. Tente novamente em alguns minutos');
      console.log('3. Verifique se a API key n√£o expirou');
    }
  }
}

// Executar teste
testAuth().catch(console.error); 